import java.io.BufferedReader;
import java.io.InputStreamReader;

/*
M개의 행과 M개의 열이 있는 격자칸이 있다.
격자의 칸들 중 일부에 N개의 로봇이 있고 그 위치가 (행 번호, 열 번호)의 쌍으로 주어진다.
행 번호와 열 번호는 1부터 M까지이다.
행 번호는 위쪽이 작은 쪽이며, 열 번호는 왼쪽이 작은 쪽이다.

모든 로봇들에게 동시에 명령을 주는데, 명령은 U, L, R의 3가지이고, U는 위로, L은 왼쪽으로, R은 오른쪽으로 한 칸씩 이동하라는 것이다.

끝에 도달하여 더 이상 갈 수 있는 칸이 없는 경우 로봇은 움직이지 않는다.
또, 한 칸에 여러 개의 로봇이 겹쳐서 들어갈 수 있다.

모든 로봇이 한 칸에 모이기 위한 최소 명령 횟수를 구하는 프로그램을 작성하라.

예를 들어 격자의 크기가 M=6 인 격자칸에 N=4개의 로봇이 있다
로봇들의 초기 위치가 각각 (2, 3), (3, 2), (1, 4), (4, 5)라고 한다.
첫명령으로 U를 주면 로봇들의 위치는 (1, 3), (2, 2), (1, 4), (3, 5)가 된다. 세번째 로봇은 움직이지 않았음에 주의하라.
다시 U 명령을 주면 로봇들의 위치는 (1, 3), (1, 2), (1, 4), (2, 5)가 된다.
이후 U, L, L, L, L의 명령을 이어서 주면 로봇이 모두 (1, 1) 위치에 모인다. 이 경우의 답은 7이다.
아래 그림은 위 과정을 보여준다. 로봇은 별 모양으로 표시하였다.
*/
public class Main {
    public static void main(String[] args)  throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    }
}